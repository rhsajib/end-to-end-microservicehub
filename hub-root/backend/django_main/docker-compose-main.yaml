version: '3.9'

services:
  django-main:
    container_name: django-main
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    networks:
      - ms_hub_network
    environment:
      - DB_HOST=db
      - CHAT_SERVICE_BASE_URL=http://chat-service:8002
    env_file:
      - ./app/.env
    volumes:
      - ./app/:/usr/src/app/
    depends_on:
      - kafka
      - db
      # - redis
    command: python manage.py runserver 0.0.0.0:8000

  db:
    restart: always
    image: "postgres:15"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=django-main
    env_file:
      - ./app/.env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      - ms_hub_network
  
  # redis:
  #   container_name: redis
  #   image: "redis"
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - ms_hub_network

  kafka:
    image: wurstmeister/kafka
    # hostname: kafka
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    networks:
      - ms_hub_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    # volumes:
    #   - ./bitnami/kafka:/bitnami/kafka
    depends_on:
      - zookeeper

 
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - ms_hub_network 
    # environment:
    #   ZOOKEEPER_CLIENT_PORT: 2181
    #   ZOOKEEPER_TICK_TIME: 2000
    #   ALLOW_ANONYMOUS_LOGIN: yes
   
    # volumes:
    #   - ./bitnami/zookeeper:/bitnami/zookeeper


volumes:
  postgres_data:

networks:
  ms_hub_network:
    external: true
